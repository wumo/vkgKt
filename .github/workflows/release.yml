name: release

on:
  push:
    branches:
      - master

jobs:
  build-windows:
    if: startsWith(github.event.head_commit.message, '[release]')
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install conan
        run: |
          pip install conan --upgrade
          pip install conan_package_tools --upgrade
          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          conan remote add wumo https://api.bintray.com/conan/wumo/public
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '9'
          java-package: jdk
          architecture: x64
      - name: Build with Gradle
        run: |
          gradle generateJava
          gradle generateJNI
      - name: Upload resources
        uses: actions/upload-artifact@v2
        with:
          name: windows-resources
          path: src/main/resources

  build-linux:
    if: startsWith(github.event.head_commit.message, '[release]')
    runs-on: ubuntu-16.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install clang-10
        run: |
          sudo su -c "echo 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial main' >> /etc/apt/sources.list"
          sudo su -c "echo 'deb-src http://apt.llvm.org/xenial/ llvm-toolchain-xenial main' >> /etc/apt/sources.list"
          sudo su -c "echo 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main' >> /etc/apt/sources.list"
          sudo su -c "echo 'deb-src http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main' >> /etc/apt/sources.list"
          sudo apt update
          sudo apt install clang-10
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-10 100
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-10 100
      - name: Install conan
        run: |
          pip3 install conan --upgrade
          pip3 install conan_package_tools --upgrade
          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          conan remote add wumo https://api.bintray.com/conan/wumo/public
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '9'
          java-package: jdk
          architecture: x64
      - name: Build with Gradle
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}
        run: |
          gradle generateJava
          gradle generateJNI
      - name: Upload resources
        uses: actions/upload-artifact@v2
        with:
          name: linux-resources
          path: src/main/resources

  commit-release:
    if: startsWith(github.event.head_commit.message, '[release]')
    needs: [ build-windows, build-linux ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: true
          fetch-depth: 0
      - name: Download linux-resources
        uses: actions/download-artifact@v2
        with:
          name: linux-resources
          path: src/main/resources
      - name: Download windows-resources
        uses: actions/download-artifact@v2
        with:
          name: windows-resources
          path: src/main/resources
      - name: Commit files
        run: |
          git config --local user.email "github-actions@users.noreply.github.com"
          git config --local user.name "github-actions"
          git add src/main/resources
          git commit -m "Compiled library resources" -a
      - name: Push changes to ci branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ci
          force: true
      - name: Get release version
        run: |
          chmod +x gradlew
          echo "PROJECT_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV
      - name: Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PROJECT_VERSION }}
          release_name: ${{ env.PROJECT_VERSION }}
          commitish: ci
      - name: Trigger jitpack.io build
        run: |
          curl --silent https://jitpack.io/com/github/${{ github.repository }}/${{ env.PROJECT_VERSION }}/${{ github.event.repository.name }}-${{ env.PROJECT_VERSION }}.pom
